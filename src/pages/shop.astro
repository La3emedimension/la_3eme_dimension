---
import { getCollection } from 'astro:content';
import BaseLayout from '../layouts/BaseLayout.astro';
import ContactCTA from '../components/ContactCTA.astro';
import Hero from '../components/Hero.astro';
import Grid from '../components/Grid.astro';

// Get all products
const allProducts = await getCollection('products');

// Business structured data for shop page
const shopStructuredData = {
	"@context": "https://schema.org",
	"@type": "CollectionPage",
	"name": "Boutique La 3ème dimension",
	"description": "Découvrez notre gamme de produits imprimés en 3D : télescopes portables, accessoires de voyage et instruments éducatifs.",
	"url": "https://la3emedim.fr/shop",
	"mainEntity": {
		"@type": "ItemList",
		"numberOfItems": allProducts.length,
		"itemListElement": allProducts.map((product, index) => ({
			"@type": "ListItem",
			"position": index + 1,
			"item": {
				"@type": "Product",
				"name": product.data.structuredData?.name || product.id,
				"description": product.data.seoDescription,
				"url": `https://la3emedim.fr/product/${product.id}`,
				"image": product.data.ogImage
			}
		}))
	}
};
---

<BaseLayout
	title="Boutique - Produits Imprimés 3D | La 3ème dimension"
	description="Découvrez notre gamme de produits imprimés en 3D : télescopes portables Smallest, accessoires voyage BHH, instruments éducatifs ERT. Innovation et qualité française."
	keywords="boutique impression 3d, télescope portable, accessoire voyage, instrument éducatif, smallest telescope, backpack hook, lunette astronomique, toulouse"
	structuredData={shopStructuredData}
>
	<div class="stack gap-20 lg:gap-48">
		<div class="wrapper stack gap-8 lg:gap-20">
			<header class="hero">
				<Hero
					title="Boutique"
					tagline="Nos produits imprimés en 3D"
					align="start"
				>
					<div class="roles">
						<span class="pill">Innovation</span>
						<span class="pill">Qualité</span>
						<span class="pill">Made in France</span>
					</div>
				</Hero>
			</header>
		</div>

		<main class="wrapper">
			<div class="product-grid">
				{allProducts.map((product) => {
					// Extract hero data for product card
					const heroSection = product.data.sections.find(s => s.type === 'hero');
					const heroData = heroSection?.data;
					
					return (
						<article class="product-card">
							<a href={`/product/${product.id}`} class="card-link">
								<div class="card-image">
									<img 
										src={heroData?.heroImage?.src || '/assets/placeholder.jpg'} 
										alt={heroData?.heroImage?.alt || product.id}
										loading="lazy"
										decoding="async"
									/>
									<div class="card-overlay">
										<span class="view-product">Voir le produit</span>
									</div>
								</div>
								<div class="card-content">
									<h3 class="product-title">{heroData?.title || product.id}</h3>
									<p class="product-tagline">{heroData?.tagline}</p>
									
									{heroData?.features && (
										<ul class="product-features">
											{heroData.features.slice(0, 2).map((feature) => (
												<li class="feature-item">
													<span class="feature-text">{feature.text}</span>
												</li>
											))}
										</ul>
									)}
									
									{product.data.price && (
										<div class="card-footer">
											<div class="price-section">
												<span class="price">{product.data.price}</span>
												{product.data.priceNote && (
													<span class="price-note">{product.data.priceNote}</span>
												)}
											</div>
										</div>
									)}
								</div>
							</a>
						</article>
					);
				})}
			</div>
		</main>
		
		<ContactCTA />
	</div>
</BaseLayout>

<style>
	.hero {
		display: flex;
		flex-direction: column;
		align-items: center;
		gap: 2rem;
	}

	.roles {
		display: flex;
		gap: 0.5rem;
		flex-wrap: wrap;
		justify-content: center;
	}

	.pill {
		display: flex;
		padding: 0.5rem 1rem;
		gap: 0.5rem;
		color: var(--accent-text-over);
		border: 1px solid var(--accent-regular);
		background-color: var(--accent-regular);
		border-radius: 999rem;
		font-size: var(--text-sm);
		line-height: 1.35;
		white-space: nowrap;
	}

	/* Section Styles */
	.section {
		display: grid;
		gap: 2rem;
	}

	.with-background {
		position: relative;
	}

	.with-background::before {
		--hero-bg: var(--bg-image-subtle-2);
		content: '';
		position: absolute;
		pointer-events: none;
		left: 50%;
		width: 100vw;
		aspect-ratio: calc(2.25 / var(--bg-scale));
		top: 0;
		transform: translateY(-75%) translateX(-50%);
		background:
			url('/assets/backgrounds/noise.png') top center/220px repeat,
			var(--hero-bg) center center / var(--bg-gradient-size) no-repeat,
			var(--gray-999);
		background-blend-mode: overlay, normal, normal, normal;
		mix-blend-mode: var(--bg-blend-mode);
		z-index: -1;
	}

	.with-background.bg-variant::before {
		--hero-bg: var(--bg-image-subtle-1);
	}

	.section-header {
		justify-self: center;
		text-align: center;
		max-width: 50ch;
		font-size: var(--text-md);
		color: var(--gray-300);
	}

	.section-header h2 {
		font-size: var(--text-2xl);
		color: var(--gray-100);
	}

	/* Product Grid */
	.product-grid {
		display: grid;
		grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
		gap: 2rem;
		width: 100%;
	}

	.product-card {
		background: var(--gradient-subtle);
		border: 1px solid var(--gray-800);
		border-radius: 1rem;
		overflow: hidden;
		transition: all var(--theme-transition);
		filter: grayscale(20%);
		height: 100%;
		display: flex;
		flex-direction: column;
	}

	.product-card:hover {
		transform: translateY(-0.25rem);
		box-shadow: var(--shadow-lg);
		filter: grayscale(0%);
	}

	.card-link {
		display: flex;
		flex-direction: column;
		text-decoration: none;
		color: inherit;
		height: 100%;
	}

	.card-image {
		position: relative;
		aspect-ratio: 4 / 3;
		overflow: hidden;
		flex-shrink: 0;
	}

	.card-image img {
		width: 100%;
		height: 100%;
		object-fit: cover;
		transition: transform var(--theme-transition);
	}

	.product-card:hover .card-image img {
		transform: scale(1.05);
	}

	.card-overlay {
		position: absolute;
		inset: 0;
		background: linear-gradient(to bottom, transparent 0%, rgba(0,0,0,0.8) 100%);
		display: flex;
		align-items: flex-end;
		justify-content: center;
		padding: 1rem;
		opacity: 0;
		transition: opacity var(--theme-transition);
	}

	.product-card:hover .card-overlay {
		opacity: 1;
	}

	.view-product {
		color: white;
		font-weight: 600;
		background: var(--accent-regular);
		padding: 0.5rem 1rem;
		border-radius: 0.5rem;
		font-size: var(--text-sm);
	}

	.card-content {
		padding: 1rem;
		display: flex;
		flex-direction: column;
		gap: 0.5rem;
		flex-grow: 1;
	}

	.product-title {
		font-size: var(--text-lg);
		font-weight: 600;
		color: var(--gray-100);
		margin: 0;
	}

	.product-tagline {
		font-size: var(--text-sm);
		color: var(--accent-regular);
		font-weight: 500;
		margin: 0;
	}

	.product-features {
		list-style: none;
		padding: 0;
		margin: 0.5rem 0 0 0;
		display: flex;
		flex-direction: column;
		gap: 0.25rem;
	}

	.feature-item {
		display: flex;
		align-items: center;
		gap: 0.5rem;
		font-size: var(--text-xs);
		color: var(--gray-400);
	}

	.feature-item::before {
		content: '•';
		color: var(--accent-regular);
		font-weight: 600;
	}

	.feature-text {
		line-height: 1.2;
	}

	.card-footer {
		margin-top: auto;
		padding-top: 0.5rem;
		border-top: 1px solid var(--gray-800);
	}

	.price-section {
		display: flex;
		align-items: baseline;
		gap: 0.5rem;
		justify-content: center;
	}

	.price {
		font-size: var(--text-lg);
		font-weight: 600;
		color: var(--accent-regular);
	}

	.price-note {
		font-size: var(--text-xs);
		color: var(--gray-400);
	}

	@media (min-width: 50em) {
		.section {
			grid-template-columns: repeat(4, 1fr);
			grid-template-areas: 'header header header header' 'gallery gallery gallery gallery';
			gap: 5rem;
		}

		.section-header {
			grid-area: header;
			font-size: var(--text-lg);
		}

		.section-header h2 {
			font-size: var(--text-4xl);
		}

		.product-grid {
			grid-area: gallery;
			grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
			gap: 2.5rem;
		}

		.hero {
			display: grid;
			grid-template-columns: 6fr 4fr;
			padding-inline: 2.5rem;
			gap: 3.75rem;
		}

		.roles {
			margin-top: 0.5rem;
			justify-content: flex-start;
		}
	}

	@media (min-width: 80em) {
		.product-grid {
			grid-template-columns: repeat(3, 1fr);
		}
	}
</style>